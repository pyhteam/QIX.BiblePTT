<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBoxContentSection.Text" xml:space="preserve">
    <value>1. Thaum chivkeeb Vajtswv tsim lub ntuj thiab lub ntiajteb. 
2. Lub ntiajteb tsis tau muaj dabtsi thiab nyob do dus, tsaus ntuj nti thoob plaws saum nplaim dej hiavtxwv, thiab Vajtswv tus ntsujplig yuj mus yuj los saum nplaim dej. 
3. Vajtswv hais tias, “Cia li muaj qhov pom kev,” ces txawm pom kev kaj nrig tuaj. 
4. Vajtswv txaus siab heev rau qhov pom kev ntawd. Ces Vajtswv thiaj muab qhov pom kev cais tawm ntawm qhov tsaus ntuj,
5. Vajtswv tis npe rau qhov pom kev hu ua “Nruab hnub” thiab qhov tsaus ntuj hu ua “Hmo ntuj.” Muaj caij tsaus ntuj thiab muaj caij kaj ntug, yog hnub ib.
6-7. Vajtswv hais tias, “Cia li muaj lub ntuj los quas dej thiab muab cais kom nyias nyob muaj nyias chaw,” yog li ntawd, Vajtswv thiaj tsim lub ntuj, thiab muab tej dej nyob hauv qab ntuj thiab tej dej saum nruab ntug cais nyias nyob nyias. Ces txawm muaj li Vajtswv hais.
8. Vajtswv tis npe rau txheej saud hu ua “Ntuj.” Muaj caij tsaus ntuj thiab muaj caij kaj ntug, yog hnub ob.
9. Vajtswv hais tias, “Tej dej uas nyob hauv qab ntuj cia li sib sau los nyob ib qhov chaw ua ke, kom av tawm tuaj,” ces txawm muaj li Vajtswv hais. 
10. Vajtswv tis npe rau cov av hu ua “Ntiajteb,” thiab cov dej uas los sib sau ua ke ntawd hu ua “Hiavtxwv.” Thiab Vajtswv pom tej uas nws tsim tau los ntawd nws txaus siab heev. 
11. Ces Vajtswv hais tais, “Lub ntiajteb cia li tuaj txhua yam nroj tsuag, qoobloo thiab tej xyoob ntoo, kom tawg paj txi txiv raws li nyias yam,” ces txawm muaj raws li Vajtswv hais.
12. Yog li ntawd, lub ntiajteb thiaj muaj txhua yam xyoob ntoo nroj tsuag, thiab qoobloo uas txawj tawg paj txi txiv, Vajtswv pom tej uas nws tsim tau los ntawd, mas nws txaus siab heev.</value>
  </data>
</root>